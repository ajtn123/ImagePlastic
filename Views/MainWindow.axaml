<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:ImagePlastic.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:view="using:ImagePlastic.Views"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="ImagePlastic.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Title="{Binding Stats.DisplayName}"
        Background="{Binding Config.BackgroundColor}"
        SizeChanged="Window_SizeChanged"
        TransparencyLevelHint="{Binding Config.Blurs,Converter={StaticResource BlurConverter}}"
        Topmost="{Binding WindowOnTop}">
    <Design.DataContext>
        <vm:MainWindowViewModel/>
    </Design.DataContext>

    <Grid RowDefinitions="Auto,*,Auto" DragDrop.AllowDrop="True" DragDrop.Drop="FileDrop">
        <Panel Grid.Row="{Binding Config.ExtendImageToTitleBar,Converter={StaticResource BoolToParameterConverter},ConverterParameter=1}"
               VerticalAlignment="Top" HorizontalAlignment="Left"
               Height="60" ZIndex="10" x:Name="TitleArea"
               PointerEntered="StackPanel_PointerEntered"
               PointerExited="StackPanel_PointerExited"
               Background="Transparent">
            <StackPanel Orientation="Horizontal" Height="30" VerticalAlignment="Top" x:Name="TitleBar" ZIndex="11" Background="{Binding AccentBrush}">
                <view:StringInquiry x:Name="PathBox" DataContext="{Binding StringInquiryViewModel}" IsVisible="False"/>
                <TextBlock VerticalAlignment="Center" Text="{Binding Stats.DisplayName}"
                           PointerPressed="TextBlock_PointerPressed" x:Name="FileName" MinWidth="50"/>
                <TextBlock VerticalAlignment="Center" Text="{Binding Stats,Converter={StaticResource StatsConverter}}"/>
                <TextBox VerticalAlignment="Center" MinHeight="10" TextChanged="TextBox_TextChanged" BorderThickness="0"
                         x:Name="ZoomText" Padding="0" Background="Transparent" MinWidth="10"/>
                <Button Padding="0" Click="Button_Click_1">
                    <Svg Path="/Assets/ViewRealSize.svg"/>
                </Button>
                <Button Padding="0" Click="Button_Click_2">
                    <Svg Path="/Assets/AspectRatio.svg"/>
                </Button>
                <Button Padding="3" Command="{Binding RotateCommand}">
                    <Svg Path="/Assets/Rotate90Cw.svg"/>
                </Button>
                <CheckBox Padding="0" IsChecked="{Binding Pinned}" IsVisible="{Binding Config.ExtendImageToTitleBar}"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Height="30" HorizontalAlignment="Right" VerticalAlignment="Top" x:Name="WindowControls" ZIndex="100">
                <Menu>
                    <MenuItem MinWidth="0" Padding="8">
                        <MenuItem.Header>
                            <Svg Path="/Assets/Menu.svg"/>
                        </MenuItem.Header>
                        <MenuItem Header="Property" Command="{Binding OpenPropCommand}"/>
                        <MenuItem Header="About" Command="{Binding OpenAboutCommand}"/>
                    </MenuItem>
                </Menu>
                <Button Click="MinimizeButton_Click">
                    <Svg Path="/Assets/Minimize.svg"/>
                </Button>
                <Button Click="MaximizeButton_Click">
                    <Panel>
                        <Svg Path="/Assets/Maximize.svg" x:Name="MaximizeIcon"/>
                        <Svg Path="/Assets/MaximizeExit.svg" x:Name="MaximizeExitIcon" IsVisible="False"/>
                    </Panel>
                </Button>
                <Button Click="FullscreenButton_Click">
                    <Panel>
                        <Svg Path="/Assets/Fullscreen.svg" x:Name="FullscreenIcon"/>
                        <Svg Path="/Assets/FullscreenExit.svg" x:Name="FullscreenExitIcon" IsVisible="False"/>
                    </Panel>
                </Button>
                <Button Click="ExitButton_Click" Classes="Con" HotKey="Escape" CornerRadius="0">
                    <Svg Path="/Assets/Exit.svg"/>
                </Button>
            </StackPanel>
        </Panel>

        <Panel Grid.Row="1" ZIndex="6" IsVisible="{Binding Config.ArrowButton,Converter={StaticResource EnumToBoolConverter},ConverterParameter=Normal}">
            <Button Content="←" Command="{Binding GoLeft}" Foreground="Transparent"
                    Margin="24,0,0,0" CornerRadius="24" FontSize="{Binding Config.ArrowSize}"
                    IsVisible="{Binding !Stats.IsWeb}" HorizontalAlignment="Left" Focusable="False"
                    PointerEntered="Button_PointerEntered" PointerExited="Button_PointerExited"/>
            <Button Content="→" Command="{Binding GoRight}" Foreground="Transparent"
                    Margin="0,0,24,0" CornerRadius="24" FontSize="{Binding Config.ArrowSize}"
                    IsVisible="{Binding !Stats.IsWeb}" HorizontalAlignment="Right" Focusable="False"
                    PointerEntered="Button_PointerEntered" PointerExited="Button_PointerExited"/>
        </Panel>
        
        <Grid Grid.Row="1" ColumnDefinitions="*,*,*" ZIndex="5" IsVisible="{Binding Config.ArrowButton,Converter={StaticResource EnumToBoolConverter},ConverterParameter=FullWindow}">
            <Button Command="{Binding GoLeft}" Grid.Column="0" Click="FullWindowLeftButtonClick"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                    Margin="0" CornerRadius="0" Classes="FullscreenButtons"
                    IsVisible="{Binding !Stats.IsWeb}" Focusable="False">
                <Svg Path="/Assets/ArrowBack.svg" IsVisible="False" x:Name="FullWindowLeftArrow"/>
            </Button>
            <Button Command="{Binding GoRight}" Grid.Column="2" Click="FullWindowRightButtonClick"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                    Margin="0" CornerRadius="0" Classes="FullscreenButtons"
                    IsVisible="{Binding !Stats.IsWeb}" Focusable="False">
                <Svg Path="/Assets/ArrowForward.svg" IsVisible="False" x:Name="FullWindowRightArrow"/>
            </Button>
        </Grid>

        <ZoomBorder Grid.Row="1" ZIndex="2" x:Name="Zoomer" SizeChanged="ZoomBorder_SizeChanged"
                    Stretch="{Binding Stretch}" Focusable="True" PanButton="{Binding Config.PanButton}"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch" GotFocus="ZoomBorder_GotFocus"
                    ZoomChanged="ZoomBorder_ZoomChanged" PointerWheelChanged="ZoomBorder_PointerWheelChanged">
            <Panel x:Name="ImagePanel">
                <Image Source="{Binding Stats.Bitmap}" Stretch="Uniform" x:Name="BitmapImage" IsVisible="{Binding Stats.Bitmap,Converter={StaticResource BoolConverter}}"/>
                <Svg Path="{Binding Stats.SvgPath}" x:Name="SvgImage" IsVisible="{Binding Stats.SvgPath,Converter={StaticResource BoolConverter}}"/>
            </Panel>
        </ZoomBorder>

        <ProgressBar Grid.Row="1" VerticalAlignment="Top" IsIndeterminate="True" IsVisible="{Binding LoadingIndication}" ZIndex="11"/>
        <TextBlock Grid.Row="2" Background="AntiqueWhite" Text="{Binding UIMessage}"
                   PointerReleased="TextBlock_PointerReleased"
                   IsVisible="{Binding UIMessage,Converter={StaticResource BoolConverter}}"/>
        
        <view:Error Grid.Row="1" ZIndex="1" IsVisible="False" x:Name="ErrorView"/>

        <Panel Grid.Row="1" VerticalAlignment="Bottom" ZIndex="9" Background="Transparent"
               PointerEntered="Panel_PointerEntered" x:Name="ProgressBarPanel"
               PointerExited="Panel_PointerExited" Height="40" IsVisible="{Binding !Stats.IsWeb}">
            <ProgressBar Margin="5,10" VerticalAlignment="Bottom" x:Name="Progress" IsVisible="False" MinWidth="0"
                         Maximum="{Binding Stats.FileCount,Mode=OneWay}"
                         Value="{Binding Stats.FileIndex,Mode=OneWay,Converter={StaticResource IntConverter},ConverterParameter=1}"/>
        </Panel>
        
        <Grid.ContextMenu>
            <ContextMenu Background="#BFFFFFFF">
                <CheckBox IsChecked="{Binding Pinned}" IsVisible="{Binding Config.ExtendImageToTitleBar}">Title Bar</CheckBox>
                <CheckBox IsChecked="{Binding Recursive}" IsVisible="{Binding !Stats.IsWeb}">Recursive</CheckBox>
                <CheckBox IsChecked="{Binding WindowOnTop}">On Top</CheckBox>
                <MenuItem Header="Open" Command="{Binding OpenLocalCommand}"/>
                <MenuItem Header="Open URI" Command="{Binding OpenUriCommand}"/>
                <MenuItem Header="Explorer" Command="{Binding ShowInExplorerCommand}" IsVisible="{Binding !Stats.IsWeb}"/>
                <MenuItem Header="Copy Path" Command="{Binding CopyPathCommand}" IsVisible="{Binding !Stats.IsWeb}"/>
                <MenuItem Header="Refresh" Command="{Binding ReloadDirCommand}"/>
                <MenuItem Header="Optimize" Command="{Binding OptCommand}" IsVisible="{Binding Stats.Optimizable}"/>
                <MenuItem Header="Rename" Command="{Binding RenameCommand}" IsVisible="{Binding !Stats.IsWeb}" HotKey="F2"/>
                <MenuItem Header="Move" Command="{Binding MoveCommand}" IsVisible="{Binding !Stats.IsWeb}"/>
                <MenuItem Header="Pick Color" Command="{Binding PickColorCommand}" IsVisible="{Binding Stats.Bitmap,Converter={StaticResource BoolConverter}}"/>
                <MenuItem Header="Property" Command="{Binding OpenPropCommand}"/>
                <MenuItem Header="Edit" Command="{Binding EditCommand}" IsVisible="{Binding Stats.EditCmd,Converter={StaticResource BoolConverter}}"/>
                <MenuItem Header="Setting" Command="{Binding ConfigureCommand}"/>
                <MenuItem Header="Delete" Command="{Binding DeleteCommand}" IsVisible="{Binding !Stats.IsWeb}" Classes="Con"/>
                <MenuItem Header="QUIT" Click="ExitButton_Click" Classes="Con"/>
            </ContextMenu>
        </Grid.ContextMenu>
    </Grid>
</Window>
